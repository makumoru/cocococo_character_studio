; ======================================================================
;                 デスクトップマスコット 設定ファイル
; ======================================================================
; このファイルで、キャラクターの動作やAPIの設定などを変更できます。
; 編集後はアプリケーションを再起動してください。
; 行頭がセミコロン(;)またはシャープ(#)の行はコメントとして扱われます。
;======================================================================


; ======================================================================
; ■■■ 1. 最初に設定する項目 (VOICEVOX) ■■■
; ======================================================================
; アプリケーションを使用する前に、以下の項目をご自身の環境に合わせて設定してください。
[VOICEVOX]
; --- VOICEVOXエンジンのパス ---
; ご自身のPCにインストールしたVOICEVOXのエンジン本体「run.exe」のフルパスを指定してください。
; 注意: VOICEVOX.exe ではなく、その中にある vv-engine/run.exe です。
; パス区切り文字は「\」を「\\」のように2つ重ねてください。
; (例) exe_path = C:\\Users\\ユーザー\\AppData\\Local\\VOICEVOX\\vv-engine\\run.exe
exe_path = C:\\Users\\ユーザー\\AppData\\Local\\VOICEVOX\\vv-engine\\run.exe

; --- APIのURL (通常は変更不要) ---
; VOICEVOXエンジンのAPIアドレスです。通常はこのままで問題ありません。
api_url = http://127.0.0.1:50021


; ======================================================================
; ■■■ AivisSpeech ■■■
; ======================================================================
; AivisSpeech (A.I.VOICEのWeb APIラッパー) を使用する場合に設定します。
[AIVIS_SPEECH]
; --- AivisSpeechエンジンのパス ---
; ご自身のPCにインストールしたAivisSpeechのエンジン本体「run.exe」のフルパスを指定してください。
; パス区切り文字は「\」を「\\」のように2つ重ねてください。
; (例) exe_path = C:\\Program Files\\AivisSpeech\\AivisSpeech-Engine\\run.exe
exe_path = C:\\Program Files\\AivisSpeech\\AivisSpeech-Engine\\run.exe

; --- APIのURL (通常は変更不要) ---
; AivisSpeechエンジンのAPIアドレスです。通常はこのままで問題ありません。
api_url = http://127.0.0.1:10101


; ======================================================================
; ■■■ 2. 最初に設定する項目 (Google API) ■■■
; ======================================================================
[GEMINI]
; --- Gemini APIキー ---
; 会話生成に使用します。Google AI Studioで取得したAPIキーを設定してください。
GEMINI_API_KEY = ここにあなたのGoogle APIキーを入力してください

; --- 使用するAIモデル名 & 1日あたりのAPI使用回数の上限---
; モデルのAPI呼び出し名称やレートは頻繁に変更されるため、定期的に確認し更新してください。
; 最新モデル 右クリックから「思考モード」をONにした際だけ使用されます。
PRO_MODEL_NAME = gemini-2.5-pro
PRO_RPD = 100
; 基本モデル1 キャラクターの発言にて使用されます。
FLASH_MODEL_NAME = gemini-2.5-flash
FLASH_RPD = 250
; 基本モデル2 基本モデル1がリミットに達してる際使用されます。
FLASH_LITE_MODEL_NAME = gemini-2.5-flash-lite
FLASH_LITE_RPD = 1000
; 旧モデル1 キャラクターへのタッチなど、深い思考が不要な事柄への反応に使用されます。
FLASH_2_MODEL_NAME = gemini-2.0-flash
FLASH_2_RPD = 200
; 旧モデル2 旧モデル1がリミットに達してる際使用されます。
FLASH_LITE_2_MODEL_NAME = gemini-2.0-flash-lite
FLASH_LITE_2_RPD = 200

; --- 安全設定 ---
; 不適切なコンテンツの生成をブロックするレベルを設定します。
; (BLOCK_NONE, BLOCK_ONLY_HIGH, BLOCK_LOW_AND_ABOVE, BLOCK_MEDIUM_AND_ABOVE)
SAFETY_HARASSMENT = BLOCK_NONE
SAFETY_HATE_SPEECH = BLOCK_NONE
SAFETY_SEXUALLY_EXPLICIT = BLOCK_NONE
SAFETY_DANGEROUS_CONTENT = BLOCK_NONE

; --- テストモード (デバッグ用) ---
; Trueにすると、APIを実際に呼び出さずにダミーの応答を返します。
GEMINI_TEST_MODE = True


[GEMMA]
; --- Gemma APIキー ---
; 感情分析に使用します。基本的にはGeminiと同じAPIキーを設定してください。
GEMMA_API_KEY = ここにあなたのGoogle APIキーを入力してください

; --- 感情分析に使用するAIモデル名 ---
; モデルのAPI呼び出し名称は頻繁に変更されるため、定期的に確認し更新してください。
GEMMA_MODEL_NAME = gemma-3n-e2b-it

; --- テストモード (デバッグ用) ---
; Trueにすると、APIを実際に呼び出さずにダミーの応答を返します。
GEMMA_TEST_MODE = True


; ======================================================================
; ■■■ 3. キャラクター設定 ■■■
; ======================================================================
; キャラクターを選択します
; --- キャラクター1の設定  ---
[CHARACTER_1]
; charactersフォルダ内のフォルダ名を指定
DIRECTORY = ジェミー
; 画面の左側に表示するかどうか (Trueにすると、キャラが左側に配置され画像が左右反転します)
IS_LEFT_SIDE = False

; --- キャラクター2の設定 ---
[CHARACTER_2]
; このキャラクターを有効にするか (True/False)。Falseにすると1人モードで起動します。
ENABLED = False
; charactersフォルダ内のフォルダ名を指定
DIRECTORY = 四国めたん
; 画面の左側に表示するかどうか (Trueにすると、キャラが左側に配置され画像が左右反転します)
IS_LEFT_SIDE = True


; ======================================================================
; ■■■ 4. UI・動作設定 ■■■
; ======================================================================
; アプリケーションの見た目や挙動に関する共通設定です。

[UI]
; キャラクターウィンドウの横幅を、プライマリスクリーン全体の幅に対する比率で指定します。
; 例: 0.2 は画面幅の20%のサイズになります。
WINDOW_WIDTH_RATIO = 0.2
;カラーテーマ
theme = default_light
; 画像の透過色 (デフォルトではこの色を透明にします)。
TRANSPARENT_COLOR = #ff00ff
; 透過部分との境界線の色(デフォルトではこの色を使用します)。
EDGE_COLOR = #838383
; 透過色の許容誤差 (0-255)。数値が大きいほど遠い色も透過します。
TRANSPARENCY_TOLERANCE = 50
; ユーザーがPCを操作していないと判断し、離席モードになるまでの時間 (秒)。
; 離席モード中はキャラクターの自動発言等が停止します。
USER_AWAY_TIMEOUT = 900
; キャラクターが自律的に話しかけてくるまでの待機時間(秒)の範囲。
; 最小値～最大値の間でランダムに時間が決まります。
; GeminiAPIのレートの都合もあり最低でも1分半(90秒)の期間が開くようにすると安心です。
; また、キャラクター間の会話については、1回やり取りが発生するたびに次の自動発言までのクールタイムが90秒間延長されます。
COOL_TIME_MIN_SECONDS = 90
COOL_TIME_MAX_SECONDS = 300
; タッチした際のマウスカーソル画像が保存されているフォルダ。
CURSOR_IMAGE_PATH = images/cursors
; クリックとドラッグを判定するための設定 (通常は変更不要)。
CLICK_TIME_THRESHOLD_MS = 300
CLICK_MOVE_THRESHOLD_PIXELS = 5
; アプリケーション起動時の「常に手前に表示」の状態 (True/False)
ALWAYS_ON_TOP = True
; アプリケーション起動時の「自動発話」の状態 (True/False)
ENABLE_AUTO_SPEECH = True
; アプリケーション起動時の「スケジュール通知」の状態 (True/False)
ENABLE_SCHEDULES = False
; アプリケーション起動時の「音声(ミュート)」の状態 (True/False)。Trueで音声ON、Falseでミュート。
ENABLE_SOUND = True

; 自動で話しかける際の話題のきっかけとなるキーワードを記述したファイルのパスを指定します。
; ファイル内には、1行に1つのキーワードを記述してください。
; 空にすると、時刻などの基本的な情報のみから話題を考えます。
AUTO_SPEECH_TOPICS_FILE = topics.txt
